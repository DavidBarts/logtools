#! /usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (c) 2011 SEOmoz
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# I m p o r t s

import os, sys
import LogParser

# V a r i a b l e s

IGNORE = [ 'PageRedirect:', 'UserPreemptionError:', 'Error: 3', 'Error: 4',
    'Error: 5', 'DNSLookupError:', 'TimeoutError:', 'ConnectError:',
    'ConnectionRefusedError:', 'ConnectionDone:', 'ConnectionLost:',
    'PartialDownloadError:', 'InfiniteRedirection:', 'RedirectWithNoLocation:',
    'UnsupportedMethod:' ]

# F u n c t i o n s

def find_em(f):
    global IGNORE
    reader = LogParser.LogReader(f)

    while True:
        entry = reader.next()
        if entry is None:
            break
        if len(entry.lines) > 1 and entry.lines[1].startswith('Traceback'):
            printit = True
            for i in IGNORE:
                if entry.lines[-1].startswith(i):
                    printit = False
                    break
            if printit:
                sys.stdout.write(entry.raw)

    reader.close()

# M a i n   P r o g r a m

if len(sys.argv) < 2:
    find_em(sys.stdin)
else:
    for i in sys.argv[1:]:
        find_em(i)
